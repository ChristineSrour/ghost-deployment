name: 'Ghost Terraform CI/CD'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'What action should be performed?'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'

env:
  AWS_DEFAULT_REGION: 'eu-west-1' 

jobs:
  terraform-setup:
    name: 'Setup Terraform'
    runs-on: ubuntu-latest
    outputs:
      tfplan: 'terraform.tfplan'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.6.2'

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Format'
        run: terraform fmt -check

      - name: 'Terraform Validate'
        run: terraform validate

      - name: 'Terraform Plan'
        run: terraform plan
        continue-on-error: true

  terraform-apply:
    name: 'Terraform Apply'
    needs: terraform-setup
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    environment:
      name: Production 
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve

  terraform-destroy:
    name: 'Terraform Destroy'
    needs: terraform-setup
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    environment:
      name: Production 
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'  
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Destroy Confirmation'
        run: echo "Terraform destroy will be executed upon approval."

      - name: 'Terraform Destroy'
        run: terraform destroy -auto-approve
